%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\docencia\Downloads\Datos Tema 1\Datos Tema 1\primates.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2015/10/01 15:43:45

%% Initialize variables.
filename = 'C:\Users\docencia\Downloads\Datos Tema 1\Datos Tema 1\primates.txt';
delimiter = ';';
startRow = 4;

%% Format string for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Genero = dataArray{:, 1};
Especie = dataArray{:, 2};
N = dataArray{:, 3};
mcer = dataArray{:, 4};
mcuerpo = dataArray{:, 5};

filename = 'C:\Users\docencia\Downloads\Datos Tema 1\Datos Tema 1\odontocetos.txt';
delimiter = ';';
startRow = 4;

%% Format string for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Allocate imported array to column variable names
Genero1 = dataArray{:, 1};
Especie1 = dataArray{:, 2};
N1 = dataArray{:, 3};
mcer1 = dataArray{:, 4};
mcuerpo1 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

loglog(mcuerpo,mcer,'o')

hold on

loglog(mcuerpo1,mcer1,'x')

hold off

gentot = [Genero' Genero1']';

esptot = [Especie' Especie1']';

mc = [mcer' mcer1']'; % Masa cerebro

mb = [mcuerpo' mcuerpo1']'; % Masa cuerpo

Y = log(mc);
X = log(mb);

[pol, S] = polyfit(X,Y,1);

res = Y-polyval(pol,X);

[maxres, maxesp] = max(res);

generotop = gentot(maxesp);
especietop = esptot(maxesp);